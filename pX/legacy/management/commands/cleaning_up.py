# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db.models import Q
from ....students.models import Student
from ....students.section_enrolments.models import (SectionEnrolment,
                                                    SectionEnrolmentLog)
from ....students.period_registrations.models import PeriodRegistration
from ....administration.courses.models import Course


def exclusions():

    STUDENTS_EXCLUSIONS_MAIN = []
    STUDENTS_EXCLUSIONS_ARCHIVE = []
    STUDENTS_DUPLICATES = []

    exclusions = {
        'Register.mde': dict(
            [
                ('STUDENTS', STUDENTS_EXCLUSIONS_MAIN)
            ]
        ),
        'DBArchive.MDE': dict(
            [
                ('STUDENTS', STUDENTS_EXCLUSIONS_ARCHIVE)
            ]
        ),
        'DUPLICATES': dict(
            [
                ('STUDENTS', STUDENTS_DUPLICATES)
            ]
        )
    }

    return exclusions


def get_results():

    for i in Student.objects.all():
        i.get_results()


def clean_up_transferred(conflict, simulate):

    TRANSFERRED = dict([
        ("022120504", "احمد محمد الدوكالى"),
        ("022130217", "اسلام فتحى خليفة ابو حلاله"),
        ("022123472", "انتصار رضوان محمد النعاس"),
        ("022130356", "أنس محمد رمضان محمد مهنى"),
        ("022120597", "أنور محمود المقطوف صوان"),
        ("022123410",  "حاتم اللافي اعمار شاكير"),
        ("022121149", "سندس محمد محمود إمحمد"),
        ("022131753", "مالك الهدوي على  البوني"),
        ("022122880", "مودة المبروك كريشيان"),
        ("022132548", "نهلة عبد القادر سالم عبد القادر"),
        ("022130718", "حسن رسمي الجعيدي"),
        ("022132301", "مصطفى فرج مفتاح زايد"),
        ("022120020", "ابراهيم ناجى بلوز"),
        ("022120079", "احمد سمير صميدة"),
        ("022120565", "امل محمد قدقود"),
        ("022132301", "مصطفى فرج مفتاح زايد"),
        ("022140535", "تقوى نورى على عزو"),
        ("022120301", "المعتصم يوسف الادريسي"),
        ("02211614", "سرور على مسلم سلطان"),
        ("022121181", "شعبان محمد شعبان كبوكة"),
        ("022132522", "نزار نصر فرج الرقيعي"),
        ("02211559", "عبد المعز عامر الزروق شلبي"),
        ("022131943", "محمد طارق خليفة عسكر"),
        ("022132361", "معز محمد حسن بن عيسى"),
        ("022140169", "محمد محمود مصطفى بن يوسف"),
    ])

    conflict.write("\nI will change the status of the following student"
                   " to transferred, this may not be accurate!!:\n")
    i = 1
    for student_number, student in TRANSFERRED.iteritems():
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student_number, student))
        i += 1

    if not simulate:
        for key in TRANSFERRED.keys():
            student = Student.objects.filter(
                registration_number=key)
            if student.exists():
                student[0].status = 'T'
                student[0].save()


def clean_up_left(conflict, simulate):

    LEFT = dict([
        ("021100459", "الاء أيمن المحمودي"),
        ("021100370", "سالم عمران الارباح"),
        ("022122947", "نزار عثمان سالم الصغير"),
    ])

    conflict.write("\nI will change the status of the following student"
                   " to left out, this may not be accurate!!:\n")
    i = 1
    for student_number, student in LEFT.iteritems():
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student_number, student))
        i += 1

    if not simulate:
        for key in LEFT.keys():
            student = Student.objects.filter(
                registration_number=key)
            if student.exists():
                student[0].status = 'L'
                student[0].save()


def clean_up_graduates(conflict, simulate):

    GRADUATES = dict([
        # credit > 129 and has enrolment AE590
        ("02192458", "نعيمة محمد أحمد بن فرج"),
        ("02197241", "عبدالبارى ابراهيم الذيب"),
        ("02197647", "سهيلة جمعة حاسوبة"),
        ("02198230", "رجاء صالح عبدالسيد"),
        ("02198562", "سارة البدرى الفيتورى"),
        ("02289286", "ناصر خليفة المحجوب"),
        ("02298258", "كريمة ابراهيم الزواوى"),
        ("02298364", "هشام رجب الرطب"),
        ("02294272", "زهرة إبراهيم خليفة"),
        ("02290073", "عبدالرحمن عامر بن مسعود"),
        ("02193229", "إيمان عمر يحي"),
        ("02193301", "حياة حسين الفزاني"),
        ("02198514", "ياسر محمد يحيى العزابى"),
        ("02189121", "عبد الواحد محمد أبوشعالة"),
        # credit > 129, and has enrolment AE599 and not in
        # 2013-2014 or 2014-2015
        ("02102372", "صلاح محمد زليط"),
        ("02197604", "فاطمة عمر الحبيشى"),
        ("02198230", "رجاء صالح عبدالسيد"),
        ("02198430", "أسماء سالم الحاراتى"),
        ("02198541", "احمد خليفة الرمالى"),
        ("02198562", "سارة البدرى الفيتورى"),
        ("02280054", "سماح ابراهيم مريحيل"),
        ("02281402", "اسيا اللافى الاسطى"),
        ("02298364", "هشام رجب الرطب"),
        ("02299097", "سهيلة عمر عقيل"),
        ("02299884", "اكرم نصرعلى منصور"),
        ("02204234", "ريم منصور محمود الطويل"),
        ("02201777", "غادة مختار سويدان"),
        ("02101123", "هيثم عامر محمد السوكني"),
        ("02204617", "بشير محمد بشير النجار"),
        ("02101112", "محمود محمد غومة"),
        ("02284107", "محمد مصباح محمد"),
        ("022990270", "رامى الصيد شنشن"),
        ("02299786", "خالد ابراهيم البشير عويد"),
        ("02197139", "عصام صالح عقيل"),
        ("02299693", "علاء على العريفي"),
        ("02105377", "فيصل عبداللطيف الحاراتي"),
        ("02101443", "مهند ساسي عبدالسلام الترهوني"),
        ("02202680", "مفتاح محمد مفتاح البوعيشي"),
        ("02204612", "محمود سالم حميد الكبير"),
        ("02202761", "هاجر علي خليفة الزائدي"),
        ("02204232", "فطيم عبدالوهاب درويش"),
        ("02281407", "اسامة ناصر الصديق"),
        ("02103845", "حسين فرج بشير بيزان"),
        ("02106001", "أحمد الصديق حسين الهوني"),
        ("02105322", "عبدالمنعم الهاشمي بشير العروسي"),
        ("02103824", "مروة سالم الشاوش"),
        ("022990977", "حسين علي المرغني"),
        ("022991294", "محمد نوير محمد"),
        ("02196763", "محمد عبدالله محمد شرينة"),
        ("02280075", "رياض محمد حمودة"),
        ("02202103", "أمال صالح أحمد المنتصر"),
        ("02280650", "أسامة عمر رجب بتور"),
        ("02299599", "عصام محمود رحومة هويسة"),
        ("02197648", "اسامة محمد امحمد"),
        ("022996668", "مريم علي ابوراس"),
        ("02101511", "هاجرمصطفى معيو"),
        ("02202529", "ليث علي عوين"),
        ("02198234", "إيمان محمد الجريبي"),
        ("02202368", "عائشة العربي بركة"),
        ("02100209", "سالم محمد بن عثمان"),
        ("02298549", "عماد محمد شعبان"),
        ("02281460", "حمزة عمر المبروك"),
        ("02201592", "رحمة محمد هلاب"),
        ("02201759", "مريم امحمد عبد السلام الحبازي"),
        ("02299535", "ايمن بشير على كريديغ"),
        ("02102104", "فرج محمد أبو دبوس"),
        ("02100087", "هشام عبد الحفيظ القويض"),
        ("02299021", "أميمة سالم انبيص"),
        ("02202758", "نهى عياد بشير طيشور"),
        ("02203282", "عبدالباسط جمعة الجبراني"),
        ("02298261", "رضا الصديق على الزروق"),
        ("022990667", "عائشة عبد الجليل الميري"),
        ("02101476", "صلاح امحمد النفاتي"),
        ("02100509", "نجوى منصور عبد السلام صابر"),
        ("02103108", "محمود على اليعقوبي"),
        ("02202522", "فيصل وجدي الجمل"),
        ("02203380", "محمود ميلاد الشريف"),
        ("02101390", "يوسف محمد الهادي القويضي"),
        ("02299450", "هيثم محمد هلال"),
        ("02198394", "فاطمة مصطفى اللافى"),
        ("02197355", "هاشم ابراهيم ابوسنوقة"),
        ("02299828", "وسام سالم ابوبكر"),
        ("02202088", "إكرام عبد الكريم أبو سبيحة"),
        ("02202664", "مروة علي محمد العكروت"),
        ("02280493", "وسام ميلاد المصراتي"),
        ("02102308", "فاتن عبدالله قدح"),
        ("02281539", "عبدالحكيم ميلاد القموني"),
        ("02280976", "سعاد ميلاد ازريق"),
        ("02202493", "فائزة إمحمد الفينوري عمارة"),
        ("02203178", "حبيبة محمد الزناتي"),
        ("022990675", "انتصارصالح البكوش"),
        ("02203452", "محمد عبدالنور كشون"),
        ("02202588", "محمد عاشور العربي الشوشان"),
        ("02203266", "ربيع جمال طيلمون"),
        ("022041375", "سراج بلعيد أبوزيد"),
        ("021717082", "مروة لطفي أحمد عقيلة"),
        ("02204321", "معاذ المزوغي ميلاد الشيباني"),
        ("02206369", "أحمد رمضان القنطري"),
        ("02103054", "سراج رشيد صالح لاغا"),
        ("02204127", "أسامة عبدالله الفرجاني"),
        ("02103849", "عائشة امحمد محمد خليفة"),
        ("02206228", "محمد إبراهيم سعيد"),
        ("02103288", "نسرين محمد أبوستة"),
        ("02298048", "نجم الدين المبروك ابراهيم"),
        ("02280019", "سناء ميلود مفتاح"),
        ("022996122", "اكرام علي الغفاري"),
        ("02201460", "هويدا محمد الصادق النفاتي"),
        ("02201654", "وليد الجيلاني احمد"),
        ("02101442", "منال علي محمد الجحاوي"),
        #credits > 129, 599 in 2013-2014 or 2014-2015,
        # excluded some names who did not finish yet
        #("022041379", "ساهير عبد الوهاب على ملاك"),
        # ("02205096", "سوسن عبدالسلام زقطة"),
        ("021061139", "عبير يونس محمد عون"),
        # ("021712283", "أحمد نورالدين فرج أبومنجل"),
        ("02201702", "ابتسام على القويضي"),
        ("021714155", "مروة خليفة الزليطني"),
        ("021712731", "حسين أكرم فرج المليتي"),
        ("02204309", "أحمد محمود مصطفى درويش"),
        ("02203955", "حافظ النور عبدالله على فرسان"),
        ("02104054", "عبدالسلام مصطفى الأشهب"),
        ("021712910", "ريحان خليفة حمود أبومنيجل"),
        ("02202113", "آمنة حميد أبو عجيلة العلواني"),
        ("021714159", "مروة عاشور أبوعائشة خليفة"),
        ("021714487", "هدى الفيتوري مصباح الفيتوري"),
        ("02202116", "أمير رجب عمار مرشد"),
        ("02201850", "هيثم عبد السلام اسموعة"),
        ("021900194", "مريم أحمد الصادق الراجحي"),
        ("021713174", "عبدالهادي حبيب الهادي الزيتوني"),
        ("021900339", "عبدالباسط مفتاح عبدالرحمن"),
        ("02103798", "سهام الشارف بن محمد"),
        ("021713181", "عبدالباسط محمد عبدالله سدودح"),
        ("02103536", "إبتهال عمر أحمد منه"),
        ("022858717", "الشيخ أحمد ولد الخليل النحوي"),
        ("022855205", "وليد منصور وافي"),
        ("022855002", "ابوعجيلة الهادي الهمالي"),
        ("02198330", "محمد عبدالرحمن قصيص"),
        ("02205051", "ايمن على خليفة الهادي"),
        ("021900563", "هبةأحمد أحمد أبوهشيمة"),
        ("022071324", "يونس حسين مبروك"),
        ("021712476", "أمل عبدالقادر أبوالزراس"),
        ("021714615", "يوسف عبدالسلام مصباح البرني"),
        ("021901797", "أحمد عبدالسلام مختار الجقندي"),
        ("021712641", "بدور محمد الفيتوري الترهوني"),
        ("02100081", "هاجر محمد التواتي"),
        ("02206361", "منصور محمد الحاج"),
        ("021713121", "طارق رمضان على جحا"),
        ("021714237", "معتز محمود سالم مصباح"),
        ("021900679", "عبدالوهاب عيسى الطويل"),
        ("021090767", "محمد جمعة بشير الشوشان"),
        ("021901959", "محمد عامر محمد طويهر"),
        # recent graduates:
        ("022800213", "أسعد جمعة الفرجاني"),
        ("022855309", "منير عمار ميلود عبدالرحيم"),
        ("02103630", "حنان عظيم ضو قيزة"),
        ("021090769", "أحمد محمد عبدالسلام الكامل"),
        ("02104047",  "عبدالرحمن محمد الصديق البوزيدي"),
        ("02206375", "رواد فندي ابوحسون"),

    ])
    conflict.write("\nI will change the status of the following student"
                   " to graduates, this may not be accurate!!:\n")
    i = 1
    for student_number, student in GRADUATES.iteritems():
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student_number, student))
        i += 1

    if not simulate:
        for key in GRADUATES.keys():
            student = Student.objects.filter(
                registration_number=key)
            if student.exists():
                student[0].status = 'G'
                student[0].save()


def clean_up_delete_students(conflict, simulate):

    NO_REGISTRATIONS = dict([
        ("02202016", "أميمة ابوبكر الأزرق"),
        ("02202228", "ريما علي عقيل سالم"),
        ("02202708", "نادر سليمان شعبان الكريكشي"),
        ("02202852", "محمد رمضان الشاوش"),
        ("02222357", "نادية محمد الديب"),
        ("02206853", "أسامة كمال حميدة"),
        ("021714570", "وسيم عبدالمجيد الهادي يوسف"),
        ("02171251", "أنور أيوب يوسف أيوب"),
        ("021714045", "محمد نوري مفتاح صولة"),
        ("021714153", "مروة جمعة ميلود الحامي"),
        ("021713102", "صلاح الدين نور عبدالحفيظ اقلاش"),
        ("021712756", "حمزة محمد المهدي الناجح"),
        ("021705826", "عبدالرؤوف أحمد منصور الدالي"),
        ("021712098", "إبراهيم كمال إبراهيم الماوي"),
        ("02112422", "المعتزبالله الأمين محمد الشيباني"),
        ("021713299", "عبدالعاطي عامر محمد موح"),
        ("02205016", "ربيعة عبدالله زائد الحفيان"),
        ("021708435", "محمد عبدالله محمدادم"),
        ("021714137", "مروان عبدالله شعبان"),
        ("021714501", "هشام معمر المهدي حمودة"),
        ("022803249", "حيدر محمد عبدالرحمن ضوي"),
        ("021712268", "أحمد مصباح محمد اللص"),
        ("021103808", "أحمد عبد الله أحمد البصير"),
        ("021105342", "عبدالله أحمد بشير ضو"),
        ("021103781", "يوسف حسين محمود العجيلي"),
        ("021101347", "معاد عبدالغني رمضان"),
        ("022123434", "عبد الرزاق ناجي الخويلدي"),
        ("02110149", "رضوان خليفة السنوسي"),
        ("021104344", "أدهم كمال أحمد الكيب"),
        ("021103785", "عبدالرحمن محمد بن غربية"),
    ])
    conflict.write("\nI will delete the following students"
                   " because they are not registered for any periods:\n")
    i = 1
    for student_number, student in NO_REGISTRATIONS.iteritems():
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student_number, student))
        i += 1

    DELETED_STUDENTS = {
        '02195315': {'name': "هالة ابوبكر عمارالجعيدي",
                     'reason': "This student does not belong to this department"}
    }

    conflict.write("\nI will delete the following students"
                   " for the reasons indicated :\n")
    i = 1
    for student_number, student in DELETED_STUDENTS.iteritems():
        conflict.write("{}- Student: {}, {}. Reason: {}\n"
                       .format(i, student_number,
                               student['name'], student['reason']))
        SectionEnrolment.objects.filter(
            period_registration__student__registration_number=student_number
        ).delete()
        SectionEnrolmentLog.objects.filter(
            period_registration__student__registration_number=student_number
        ).delete()
        PeriodRegistration.objects.filter(
            student__registration_number=student_number).delete()
        for j in Student.objects.filter(registration_number=student_number):
            j.delete()
        i += 1


    if not simulate:
        for key in NO_REGISTRATIONS.keys():
            student = Student.objects.filter(
                registration_number=key)
            if student.exists():
                student.delete()

def correct_gender(conflict):

    GENDER = {
        "02101338": "M",
        "02202123": "F",
        "02201645": "M"
    }

    conflict.write('\nFound students with empty gender field'
                   ', fixed everything:\n')
    i = 1
    for student, gender in GENDER.iteritems():
        a = Student.objects.get(registration_number=student)
        a.gender = gender
        a.save()
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student, a))
        i += 1


def clean_up_dropped_out_students(conflict, simulate):

    DROPPED_OUT = dict([
        ("02103953", "عبدالروؤف عبدالسلام القراري, Autumn 2009 , 70.0 , 49.0 "),
        ("02203249", "اكرم عياد الغابر, Spring 2011 , 97.0 , 79.0 "),
        ("02203522", "شيماء متولي محمد النبراوي, Autumn 2011 , 104.0 , 84.0 "),
        ("02103702", "مهند امحمد محمد الحجاجي, Spring 2006 , 31.0 , 24.0 "),
        ("02204729", "هشام الهادي الخمائسي, Spring 2009 , 84.0 , 64.0 "),
        ("02101118", "معتصم محمود محمد عامر, Autumn 2002 , 36.0 , 20.0 "),
        ("02101246", "مفتاح علي اليسير, Spring 2004 , 59.0 , 46.0 "),
        ("02101278", "رجواء محمد السائح, Autumn 2003 , 31.0 , 28.0 "),
        ("02101291", "علاء عبد الحميد علي, Autumn 2008 , 96.0 , 88.0 "),
        ("02102054", "محمد محمد مصباح المرغني, Spring 2004 , 49.0 , 40.0 "),
        ("02102381", "عماد عمر عبد الرحيم, Spring 2004 , 50.0 , 44.0 "),
        ("02103451", "محمد مصطفى أبوجريدة, Autumn 2005 , 56.0 , 56.0 "),
        ("02181086", "اسامة مصطفى الشيباني, Autumn 2000 , 34.0 , 15.0 "),
        ("02201047", "ربيع جمعة الغراري, Autumn 2003 , 37.0 , 34.0 "),
        ("02201090", "عاصم يوسف بن عمر, Spring 2002 , 39.0 , 31.0 "),
        ("02201141", "عبدالسلام جمعة دخيل, Spring 2009 , 104.0 , 74.0 "),
        ("02201158", "احمد مصباح سرطى, Autumn 2002 , 35.0 , 23.0 "),
        ("02201302", "علي محمد الحاجي, Autumn 2002 , 31.0 , 21.0 "),
        ("02201330", "عصام محمد الريشي, Spring 2002 , 43.0 , 43.0 "),
        ("02201625", "مروة سالم عبد الله بن زايد, Spring 2002 , 37.0 , 33.0 "),
        ("02201630", "عبدالمنعم ضو بنضو, Autumn 2002 , 27.0 , 14.0 "),
        ("02201775", "عبدالناصر عبدالسلام سعيد, Spring 2002 , 43.0 , 37.0 "),
        ("02201876", "محمود البشير النعمي, Spring 2004 , 61.0 , 40.0 "),
        ("02202061", "امين عبد السلام القلعي, Spring 2013 , 85.0 , 73.0 "),
        ("02202065", "إيمان علي الغزاوي, Spring 2004 , 24.0 , 5.0 "),
        ("02202112", "آمنة الدوكالي محمد منصور فرج, Spring 2004 , 37.0 , 29.0 "),
        ("02202117", "أميرة علي الطاهر المرموري, Spring 2004 , 52.0 , 52.0 "),
        ("02202132", "إيمان علي مجمد صالح, Spring 2004 , 48.0 , 36.0 "),
        ("02202153", "ايناس محمد علي الدوكالي, Autumn 2003 , 36.0 , 13.0 "),
        ("02202154", "ايناس محمد علي الغنيمي, Autumn 2002 , 18.0 , 5.0 "),
        ("02202167", "بسمة محمد الشريف, Autumn 2002 , 16.0 , 2.0 "),
        ("02202213", "نصر الدين عبد الرزاق الخويلدي, Spring 2004 , 33.0 , 13.0 "),
        ("02202263", "رقية محمد عبدالله, Spring 2003 , 28.0 , 11.0 "),
        ("02202289", "ريما على عقيل سالم, Autumn 2004 , 35.0 , 17.0 "),
        ("02202317", "سعيد علي سعيد عاشور, Spring 2004 , 40.0 , 24.0 "),
        ("02202318", "سعيد ميلاد سعيد المروش, Spring 2004 , 33.0 , 13.0 "),
        ("02202325", "سندس محمد مصطفى ابوسبولة, Spring 2004 , 40.0 , 24.0 "),
        ("02202346", "طارق محمد سعد اقريفة, Spring 2004 , 48.0 , 15.0 "),
        ("02202367", "عائشة محمود الخضبان, Spring 2004 , 39.0 , 23.0 "),
        ("02202425", "محمد أبو بكر التارقي, Spring 2004 , 28.0 , 14.0 "),
        ("02202439", "عبد المحسن محمد صالح ضويلة, Autumn 2003 , 21.0 , 9.0 "),
        ("02202468", "على الطاهر الميلادي, Spring 2013 , 128.0 , 102.0 "),
        ("02202683", "ملاك مصطفى بن زكري, Spring 2004 , 44.0 , 35.0 "),
        ("02101338", "بدر علي محمد بلقاسم, Autumn 2003 , 6.0 , 0.0 "),
        ("02202123", "إيمان علي صالح, Autumn 2003 , 4.0 , 0.0 "),
        ("02202802", "عبد الله محمد أبو سنينة, Spring 2004 , 26.0 , 17.0 "),
        ("02203016", "أميمة أبوبكر الغناي, Spring 2004 , 29.0 , 27.0 "),
        ("02203109", "عبدالسلام فيض القريو, Spring 2004 , 35.0 , 35.0 "),
        ("02203164", "أحمد عبدالرزاق محمد عكيش, Autumn 2004 , 33.0 , 31.0 "),
        ("02203182", "دنيا عبداللطيف سعد بن سعد, Spring 2004 , 34.0 , 31.0 "),
        ("02203403", "اسامة عامر مرغم, Spring 2004 , 38.0 , 33.0 "),
        ("02203540", "محمد مصطفى عامر, Autumn 2003 , 23.0 , 11.0 "),
        ("02203711", "الطاهر خليفة الثابت, Spring 2004 , 31.0 , 28.0 "),
        ("02203716", "طه فرج سالم العامري, Spring 2004 , 27.0 , 24.0 "),
        ("02203778", "رندا البهلول الغناي, Autumn 2004 , 36.0 , 27.0 "),
        ("02203782", "دارين أشرف عجاج, Spring 2004 , 32.0 , 22.0 "),
        ("02204843", "حمادة خالد الهادي الكويسح, Spring 2012 , 48.0 , 31.0 "),
        ("02280208", "حمزة علي عبدالسلام, Spring 2004 , 78.0 , 63.0 "),
        ("02280917", "اشرف محمد الحاج, Spring 2000 , 34.0 , 31.0 "),
        ("02281563", "انتصار الطاهر الشريف, Autumn 2002 , 60.0 , 38.0 "),
        ("02281715", "اشرف رمضان الجبالي, Spring 2002 , 60.0 , 45.0 "),
        ("02283337", "فتحى مفتاح بن حليم, Spring 2004 , 63.0 , 48.0 "),
        ("02298419", "عادل ميلاد عبداللطيف, Spring 1999 , 19.0 , 14.0 "),
        ("02298482", "عماد الصديق ابوشاقور, Autumn 2000 , 43.0 , 21.0 "),
        ("02299407", "إيمان سعيد المجبر, Spring 2001 , 45.0 , 27.0 "),
        ("02103669", "بدور بهجت الشكشوكي, Autumn 2004 , 24.0 , 13.0 "),
        ("02197234", "إبتسام عمار بلعيد, Autumn 2003 , 71.0 , 45.0 "),
        ("021120779", "يوسف عبدالحفيظ يوسف العربي, Spring 2011 , 19.0 , 14.0 "),
        ("021125116", "حسن ناجي محمد كريم, Spring 2012 , 28.0 , 20.0 "),
        ("021100928", "بشرى صلاح محمد عون, Autumn 2012 , 42.0 , 39.0 "),
        ("021712927", "زكريا على عمار الحمادي, Spring 2008 , 17.0 , 3.0 "),
        ("021713725", "محمد المبروك سعيد منصور, Spring 2008 , 17.0 , 2.0 "),
        ("021713305", "عبدالعزيز رمضان محمد يحي, Spring 2008 , 24.0 , 9.0 "),
        ("021900558", "على خليفة حسين ضو, Autumn 2009 , 29.0 , 29.0 "),
        ("021904942", "خالد الهدوي الهادي الكماشي, Spring 2011 , 37.0 , 34.0 "),
        ("021904988", "عبدالرؤوف على الفيتوري الكماشي, Autumn 2009 , 26.0 , 20.0 "),
        ("021120059", "محمد فتحي على الصيد, Spring 2013 , 31.0 , 21.0 "),
        ("02105479", "مروان محمد سالم المجدوب, Autumn 2005 , 11.0 , 0.0 "),
        ("021901115", "عاصم محمد كمال عبدالعال, Spring 2010 , 42.0 , 42.0 "),
        ("022855247", "عبدالرؤوف ابراهيم على, Autumn 2009 , 28.0 , 17.0 "),
        ("022855269", "هيثم الهادي الجويلي, Autumn 2010 , 31.0 , 29.0 "),
        ("022800130", "محمد احمد على عمر, Autumn 2009 , 37.0 , 32.0 "),
        ("022855148", "منذر مختار عبدالرحمن البزنطي, Spring 2009 , 18.0 , 7.0 "),
        ("02197106", "نسرين خليفة شلابى, Spring 2007 , 164.0 , 133.0 "),
        ("021900978", "مروان عبدالناصر محمد الشيباني, Spring 2010 , 20.0 , 9.0 "),
        ("02108194", "سارة شعيب عبدالعزيز حبيب, Spring 2011 , 39.0 , 27.0 "),
        ("021901189", "محمد البهلول محمد شفوح, Autumn 2012 , 30.0 , 13.0 "),
        ("021900505", "حمزة أحمد على جامع, Autumn 2012 , 46.0 , 30.0 "),
        ("02202021", "أحمد سعيد السنوسي, Spring 2004 , 28.0 , 16.0 "),
        ("021104670", "عبدالمؤمن فتحي خليفة عبود, Spring 2011 , 32.0 , 30.0 "),
        ("021090773", "حسن  رمضان محمد الشيدي, Autumn 2010 , 28.0 , 16.0 "),
        ("021104472", "محمد عبدالوهاب عبدالرزاق سالم, Spring 2010 , 13.0 , 10.0 "),
        ("02108187", "صالح عبدالحميد صالح, Autumn 2010 , 33.0 , 18.0 "),
        ("021712545", "إيمان بشير إبديوي, Autumn 2012 , 88.0 , 64.0 "),
        ("022071120", "العارف خليفه احمد ديره, Spring 2013 , 71.0 , 43.0 "),
        ("021128235", "عبد الرحمن سالم العجيلي, Autumn 2012 , 34.0 , 23.0 "),
        ("021101183", "سامي موسى حبيل أحمد, Autumn 2012 , 37.0 , 19.0 "),
        ("02206468", "وائل سالم محمد مغني, Autumn 2012 , 83.0 , 77.0 "),
        ("02211185", "رحاب علي خليفة النائلي, Spring 2013 , 37.0 , 27.0 "),
        ("02211227", "يعرب محمد عمر أبوشامخة, Autumn 2011 , 22.0 , 0.0 "),
        ("021100404", "محمد عبدالسلام الدالي, Autumn 2012 , 37.0 , 27.0 "),
        ("021100421", "مروة محمد طالب, Autumn 2012 , 25.0 , 23.0 "),
        ("021101603", "حمزة محمد عبدالكريم, Spring 2013 , 32.0 , 24.0 "),
        ("021100016", "احمد مصطفى الغنودي, Autumn 2012 , 34.0 , 18.0 "),
        ("022123440", "رمضان الهادي رمضان, Spring 2013 , 11.0 , 0.0 "),
        ("022122886", "مودة نيبل عبد العزير, Spring 2013 , 23.0 , 16.0 "),
        ("022123437", "احمد ابوحفيضه, Spring 2013 , 13.0 , 0.0 "),
        ("022122379", "محمد علي مسعود, Spring 2013 , 20.0 , 8.0 "),
        ("022120181", "اسامة محمد السويح, Spring 2013 , 32.0 , 28.0 "),
        ("02211554", "محمد عبد الله بن زقلام, Spring 2013 , 29.0 , 23.0 "),
        ("022121387", "عبد الله عبد السلام محمد الطشاني, Spring 2013 , 9.0 , 3.0 "),
        ("022120028", "ابراهيم ناجي ابراهيم اللوز, Spring 2013 , 26.0 , 26.0 "),
        ("021713678", "محمد أبوبكر محمد الشريف, Spring 2008 , 15.0 , 0.0 "),
        ("022121231", "صهيب ابوزيد المشنن, Spring 2013 , 25.0 , 17.0 "),
        ("021100692", "سراج نوري عزو, Spring 2013 , 30.0 , 30.0 "),
        ("021713464", "على الزرقاني علىالمنتصر, Spring 2008 , 17.0 , 2.0 "),
        ("02201421", "حسام الدين مصطفى سليم, Spring 2007 , 88.0 , 56.0 "),
        ("022806644", "على الطاهر عاى الأحجل, Spring 2009 , 18.0 , 7.0 "),
        ("021100199", "محمد عبدالرزاق ساسي, Autumn 2012 , 38.0 , 28.0 "),
        ("021713280", "عبدالسلام أحمد عبدالسلام مسعود, Spring 2008 , 18.0 , 7.0 "),
        ("022804784", "سفيان عبدالمجيد أبوغرارة, Spring 2009 , 20.0 , 8.0 "),
        ("021712755", "حمزة عمران الكوني كعال, Autumn 2009 , 38.0 , 27.0 "),
        ("02103445", "راضية ابوصيدة على الشايقي, Autumn 2009 , 39.0 , 33.0 "),
        ("021714056", "محمد قصي عامر القنبري, Spring 2010 , 27.0 , 12.0 "),
        ("02202509", "غيلان محمد الشريف, Autumn 2009 , 56.0 , 32.0 "),
        ("02202207", "ريما محمد سالم, Autumn 2009 , 71.0 , 52.0 "),
        ("021712396", "آلاء عبدالقادر البغدادي, Spring 2011 , 48.0 , 33.0 "),
        ("021712388", "أكرم عياد حسن الدالي, Autumn 2011 , 67.0 , 59.0 "),
        ("02211472", "زهرة فتحي مصطفى السنوسي, Spring 2013 , 41.0 , 34.0 "),
        ("021902478", "أيمن يعقوب موسى صمامة, Autumn 2011 , 38.0 , 23.0 "),
        ("022120774", "حسن محمد عبد السلام العوزي, Spring 2013 , 31.0 , 26.0 "),
        ("021120723", "يوسف محمد محمد البدري, Spring 2013 , 38.0 , 29.0 "),
        ("022121754", "علي احمد ابراهيم عقل, Spring 2013 , 29.0 , 22.0 "),
        ("022121360", "عبد السلام علي المالطي, Spring 2013 , 22.0 , 14.0 "),
        ("02203286", "عدنان محمد سويدان, Autumn 2009 , 71.0 , 50.0 "),
        ("022122218", "محمد سالم ابو جناح, Spring 2013 , 34.0 , 27.0 "),
        ("02205089", "محمد ارحومة الفرجي, Spring 2009 , 43.0 , 22.0 "),
    ])

    conflict.write("\nI will change the status of the following student"
                   " to dropped out, this is based on the fact that"
                   " they're not graduates and didn't register for any"
                   " of the previous 4 semesters.\nI have listed along"
                   " with the number and name, their last registration"
                   " and the CUMULATIVE REGISTERED CREDITS and "
                   " CUMULATIVE PASSED CREDITS:\n")
    i = 1
    for student_number, student in DROPPED_OUT.iteritems():
        conflict.write("{}- Student: {}, {}\n"
                       .format(i, student_number, student))
        i += 1

    if not simulate:
        for key in DROPPED_OUT.keys():
            student = Student.objects.filter(
                registration_number=key)
            if student.exists():
                student[0].status = 'D'
                student[0].save()


def clean_up_course_names():

    courses = Course.objects.filter(
        Q(name__endswith='Ii') |
        Q(name__endswith='Iii') |
        Q(name__endswith='Iv') |
        Q(name__endswith='Vi')
    )
    for course in courses:
        split = course.name.split()
        split[-1] = split[-1].upper()
        course.name = ' '.join(split)
        course.save()

    course = Course.objects.get(code='GS112L')
    course.name = "Physics Lab"
    course.save()


def clean_up_equalled_courses():

    courses = {
        'GE133': ['AE133', 'CE133'],
        'GS101': ['GS103', ],
        'GS102': ['GS103', ],
        'GS203': ['GS104', ],
        'GS204': ['GS104', ],
        'GS111': ['GS113', ],
        'GS112': ['GS113', ],
        'GS112L': ['GS113L', ],
        'GH141': ['GH140N', ],
        'GH142': ['GH140N', ],
        'EE280': ['EE200', ],
        'GE222': ['GE123', ],
        'GS200': ['EC251', 'GE108'],
        'AE210': ['ME210', ],
        'GE121': ['GE122N', 'GE124E'],
        'GE222': ['GE123', 'GE124E'],
    }

    for key, val in courses.items():
        course = Course.objects.get(code=key)
        for i in val:
            equalled = Course.objects.get(code=i)
            course.equalled_courses.add(equalled)
